name: Build & deploy to AWS

on:
  push:
    branches:
      - development

permissions:
  id-token: write
  contents: read
jobs:
  BuildAndDeploy:
    name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }} deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build UI
        env:
          REACT_APP_API_URL: ${{ vars.REACT_APP_API_URL }}
        run: npm run build:ui
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          role-session-name: ServerlessDeployment
          aws-region: ${{ vars.REGION }}
      - name: Install serverless globally
        run: npm i -g serverless@3.x
      - name: Copy UI build to serverless folder
        run: npm run cp:ui
      - name: Deploy to AWS
        run: npm run deploy:serverless
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          REGION: ${{ vars.REGION }}
          STAGE_NAME: ${{ vars.STAGE_NAME }}
          VPC_SECURITY_GROUP_ID: ${{ secrets.VPC_SECURITY_GROUP_ID }}
          VPC_SUBNET_ID_1: ${{ secrets.VPC_SUBNET_ID_1 }}
          VPC_SUBNET_ID_2: ${{ secrets.VPC_SUBNET_ID_2 }}
          FRONTEND_URL: ${{ vars.FRONTEND_URL }}
          RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
          SMTP_CREDENTIALS_NAME: ${{ secrets.SMTP_CREDENTIALS_NAME }}
          SMTP_ENDPOINT: ${{ secrets.SMTP_ENDPOINT }}
          SMTP_SENDER: ${{ vars.SMTP_SENDER }}
